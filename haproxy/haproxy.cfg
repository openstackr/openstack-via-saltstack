# Global settings
#---------------------------------------------------------------------
global
  #
  #    local2.*                       /var/log/haproxy.log
  #
  log         127.0.0.1 local2

  chroot      /var/lib/haproxy
  pidfile     /var/run/haproxy.pid
  maxconn     1020   # See also: ulimit -n
  user        haproxy
  group       haproxy
  daemon

  # turn on stats unix socket
  stats socket /var/lib/haproxy/stats.sock mode 600 level admin
  stats timeout 2m

#---------------------------------------------------------------------
# common defaults that all the 'frontend' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
  mode    tcp
  log     global
  option  dontlognull
  option  redispatch
  retries                   3
  timeout queue             45s
  timeout connect           5s
  timeout client            1m
  timeout server            1m
  timeout check             10s
  maxconn                   1020

#---------------------------------------------------------------------
# HAProxy statistics backend
#---------------------------------------------------------------------
listen haproxy-monitoring *:80
  mode    http
  stats   enable
  stats   show-legends
  stats   refresh           5s
  stats   uri               /
  stats   realm             Haproxy\ Statistics
  stats   auth              monitor:AdMiN123
  stats   admin             if TRUE


{%if grains['haproxy'] == 'mysql' %}
listen galera_cluster
  bind *:3306
  balance  source
    {%- for key,value in salt ['mine.get']('G@openstack-id:' + grains['openstack-id'] + ' and G@role:' + grains['haproxy'] + '','grains.items','compound').items() -%}
       {% set count = loop.index %}
          {%- for minions_id,minions_value in  salt['pillar.get']('openstack-instance:'+ pillar['current-openstack-instance'] + ':minions:'+ key).items() -%}
               {% if 'mysql-cluster-id' in minions_id  %}
   server MySQL{{count}} {{value['ipv4'][1]}}:3306 maxconn 151 check
               {%- endif %}
          {%- endfor -%}
       {%- endfor -%}
    {% endif %}

{%if grains['haproxy'] == 'rabbitmq' %}
listen rabbitmq_cluster
  bind *:5672
  balance  source
    {%- for key,value in salt ['mine.get']('G@openstack-id:' + grains['openstack-id'] + ' and G@role:' + grains['haproxy'] + '','grains.items','compound').items() -%}
       {% set count = loop.index %}
          {%- for minions_id,minions_value in  salt['pillar.get']('openstack-instance:'+ pillar['current-openstack-instance'] + ':minions:'+ key).items() -%}
               {% if 'rabbitmq-cluster-id' in minions_id  %}
    server RabbitMQ{{count}} {{value['ipv4'][1]}}:5672 maxconn 151 check
               {%- endif %}
          {%- endfor -%}
       {%- endfor -%}
    {% endif %}

